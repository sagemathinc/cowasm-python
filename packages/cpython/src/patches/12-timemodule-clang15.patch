--- native/Modules/timemodule.c	2022-09-11 12:23:30.000000000 -0700
+++ wasm/Modules/timemodule.c	2022-09-23 12:32:29.084553004 -0700
@@ -360,7 +360,7 @@
 #ifdef _Py_MEMORY_SANITIZER
     __msan_unpoison(&clk_id, sizeof(clk_id));
 #endif
-    return PyLong_FromLong(clk_id);
+    return PyLong_FromLong((long)clk_id);
 }
 
 PyDoc_STRVAR(pthread_getcpuclockid_doc,
@@ -1960,14 +1960,14 @@
     if (HAVE_CLOCK_GETTIME_RUNTIME) {
 
 #ifdef CLOCK_REALTIME
-        if (PyModule_AddIntMacro(module, CLOCK_REALTIME) < 0) {
+        if (PyModule_AddIntMacro(module, (long) CLOCK_REALTIME) < 0) {
             return -1;
         }
 #endif
 
 #ifdef CLOCK_MONOTONIC
 
-        if (PyModule_AddIntMacro(module, CLOCK_MONOTONIC) < 0) {
+        if (PyModule_AddIntMacro(module, (long) CLOCK_MONOTONIC) < 0) {
             return -1;
         }
 
@@ -1984,13 +1984,13 @@
         }
 #endif
 #ifdef CLOCK_PROCESS_CPUTIME_ID
-        if (PyModule_AddIntMacro(module, CLOCK_PROCESS_CPUTIME_ID) < 0) {
+        if (PyModule_AddIntMacro(module, (long) CLOCK_PROCESS_CPUTIME_ID) < 0) {
             return -1;
         }
 #endif
 
 #ifdef CLOCK_THREAD_CPUTIME_ID
-        if (PyModule_AddIntMacro(module, CLOCK_THREAD_CPUTIME_ID) < 0) {
+        if (PyModule_AddIntMacro(module, (long) CLOCK_THREAD_CPUTIME_ID) < 0) {
             return -1;
         }
 #endif
